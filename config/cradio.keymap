// Copyrigmt (c) 2022 The ZMK Contributors
// SPDX-License-Identifier: MIT

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define DEFAULT 1
#define LOWER   0
#define RAISE   2
#define GAME    3

/ {
    behaviors {
        ht: hold_tap {
            label = "hold_tap";
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <250>;
            quick-tap-ms = <150>;
            global-quick-tap;
            bindings = <&kp>, <&kp>;
        };
    };
};

/ {
    combos {
        compatible = "zmk,combos";

        CbShft {
            bindings = <&sk LEFT_SHIFT>;
            key-positions = <13 12>;
            timeout-ms = <25>;
            slow-release;
            layers = <0>;
        };

        CbCtrl {
            bindings = <&sk LEFT_CONTROL>;
            key-positions = <12 11>;
            timeout-ms = <25>;
            slow-release;
            layers = <0>;
        };

        CbAlt {
            bindings = <&sk LEFT_ALT>;
            key-positions = <10 11>;
            timeout-ms = <25>;
            slow-release;
            layers = <0>;
        };

        CbGui {
            bindings = <&sk LEFT_GUI>;
            key-positions = <13 10>;
            timeout-ms = <25>;
            slow-release;
            layers = <0>;
        };

        CbAltTab {
            bindings = <&alt_tab>;
            key-positions = <30 12>;
            slow-release;
            timeout-ms = <25>;
            layers = <0>;
        };

        CbEsc {
            bindings = <&kp ESC>;
            key-positions = <0 1>;
            timeout-ms = <25>;
            layers = <0>;
        };

        CbPass {
            bindings = <&password>;
            key-positions = <2 1>;
            timeout-ms = <25>;
            layers = <0>;
        };

        CbEmail {
            bindings = <&email>;
            key-positions = <3 2>;
            timeout-ms = <25>;
            layers = <0>;
        };

        CbCopy {
            bindings = <&kp K_COPY>;
            key-positions = <30 11>;
            timeout-ms = <25>;
            layers = <0>;
        };

        CbPaste {
            bindings = <&kp K_PASTE>;
            key-positions = <30 13>;
            timeout-ms = <25>;
            layers = <0>;
        };

        CbUndo {
            bindings = <&kp LC(Z)>;
            key-positions = <30 10>;
            timeout-ms = <25>;
            layers = <0>;
        };

        CbRepeat {
            bindings = <&key_repeat>;
            key-positions = <30 14>;
            timeout-ms = <25>;
            layers = <0>;
        };

        CbEnd {
            bindings = <&kp LC(PG_UP)>;
            key-positions = <13 11>;
            timeout-ms = <25>;
            layers = <0>;
        };

        CbHome {
            bindings = <&kp LC(PAGE_DOWN)>;
            key-positions = <12 10>;
            timeout-ms = <25>;
            layers = <0>;
        };

        CbBootloader {
            bindings = <&bootloader>;
            key-positions = <3 2 1 0>;
            timeout-ms = <25>;
            layers = <0>;
        };

        CbPause {
            bindings = <&kp C_PAUSE>;
            key-positions = <14 13>;
            timeout-ms = <25>;
            layers = <0>;
        };

        CbAria {
            bindings = <&kp LC(SLASH)>;
            key-positions = <23 22>;
            timeout-ms = <25>;
            layers = <0>;
        };

        CbCtrlA {
            bindings = <&kp LC(A)>;
            key-positions = <22 21>;
            timeout-ms = <25>;
            layers = <0>;
        };

        CbHome {
            bindings = <&kp HOME>;
            key-positions = <16 18>;
            timeout-ms = <25>;
            layers = <0>;
        };

        CbEnd {
            bindings = <&kp END>;
            key-positions = <17 19>;
            timeout-ms = <25>;
            layers = <0>;
        };

        CbMute {
            bindings = <&kp C_MUTE>;
            key-positions = <21 20>;
            layers = <0>;
            timeout-ms = <25>;
        };

        CbPower {
            bindings = <&kp C_POWER>;
            key-positions = <4 3 2 1 5 7 6 8>;
            layers = <0>;
            timeout-ms = <25>;
        };
    };

    macros {
        password: password {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(E) &kp LS(L) &kp I &kp N0 &kp N8 &kp N1 &kp N3 &kp N0 &kp N7 &kp POUND &kp N1 &kp N3>;
            label = "PASSWORD";
        };

        email: email {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none &kp S &kp N &kp I &kp P &kp E &kp S &kp E &kp L &kp I &kp AT &kp G &kp M &kp A &kp I &kp L &kp DOT &kp C &kp O &kp M>;
            label = "EMAIL";
        };

        alt_tab: alt_tab {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&kp LA(TAB) &mo 1>,
                <&macro_pause_for_release>,
                <&kp LA(TAB) &mo 1>;

            label = "ALT_TAB";
        };

        Username: Username {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none &kp LS(K) &kp I &kp T &kp E &kp S &kp LS(A) &kp N &kp D &kp LS(D) &kp A &kp R &kp T &kp S>;
            label = "USERNAME";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q  &kp W  &kp F  &kp P        &kp PERIOD    &kp J      &kp L      &kp U  &kp Y  &kp SQT
&kp A  &kp R  &kp S  &kp T        &kp G         &kp M      &kp N      &kp E  &kp I  &kp O
&kp Z  &kp X  &kp C  &kp D        &kp V         &kp COMMA  &kp H      &kp B  &kp K  &kp TAB
                     &lt 1 ENTER  &kp SPACE     &kp BSPC   &lt 2 DEL
            >;
        };

        nav_layer {
            bindings = <
&kp SLASH  &kp K_VOLUME_DOWN2  &kp UP_ARROW  &kp K_VOLUME_UP2  &tog 3       &kp EQUAL  &kp N7  &kp N8  &kp N9  &kp ASTRK
&kp LSHFT  &kp LEFT            &kp DOWN      &kp RIGHT         &kp UNDER    &kp SEMI   &kp N4  &kp N5  &kp N6  &kp N0
&kp CAPS   &kp LBRC            &kp RBRC      &kp LBKT          &kp RBKT     &kp MINUS  &kp N1  &kp N2  &kp N3  &kp BSLH
                                             &trans            &trans       &trans     &trans
            >;
        };

        sym_layer {
            bindings = <
&kp F1       &kp F2      &kp F3     &kp F4     &kp F5        &kp F6        &kp F7        &kp F8        &kp F9        &kp F10
&kp F11      &kp F12     &kp HOME   &kp END    &kp EXCL      &kp HASH      &kp LPAR      &kp RPAR      &kp FSLH      &kp AMPS
&bootloader  &kp DOLLAR  &kp CARET  &kp GRAVE  &bt BT_CLR    &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
                                    &trans     &trans        &trans        &trans
            >;
        };

        game_layer {
            bindings = <
&kp ESC    &kp Q  &kp W  &kp E     &kp R        &trans  &trans  &trans  &trans  &sys_reset
&kp LSHFT  &kp A  &kp S  &kp D     &kp F        &trans  &trans  &trans  &trans  &bootloader
&kp LCTRL  &kp Z  &kp X  &kp C     &kp V        &trans  &trans  &trans  &trans  &to 1
                         &kp LALT  &kp SPACE    &trans  &trans
            >;
        };
    };
};
